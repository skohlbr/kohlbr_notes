#! /usr/bin/env python

PACKAGE='vigir_wide_angle_image_proc'

from dynamic_reconfigure.parameter_generator_catkin import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

interpolate_enum = gen.enum([ gen.const("NN", int_t, 0, "Nearest neighbor"),
                              gen.const("Linear", int_t, 1, "Linear"),
                              gen.const("Cubic", int_t, 2, "Cubic"),
                              gen.const("Lanczos4", int_t, 4, "Lanczos4")],
                            "interpolation type")

gen.add("interpolation", int_t, 0,
        "Interpolation algorithm between source image pixels",
        1, 0, 4, edit_method = interpolate_enum)

gen.add("focal_length", double_t,  SensorLevels.RECONFIGURE_RUNNING, "Focal Length",4.0,0.0,150.0)
gen.add("pitch_deg", double_t,  SensorLevels.RECONFIGURE_RUNNING, "Virtual camera pitch",0.0,-95,95.0)
gen.add("yaw_deg", double_t,  SensorLevels.RECONFIGURE_RUNNING, "Virtual camera yaw",0.0,-95,95.0)
gen.add("use_reconfigure_viewpoint", bool_t,  SensorLevels.RECONFIGURE_RUNNING, "Use Reconfigure Viewpoint", True)
gen.add("track_frame", str_t,  SensorLevels.RECONFIGURE_RUNNING, "tf Frame to be tracked", "")
gen.add("track_frame_x", double_t,  SensorLevels.RECONFIGURE_RUNNING, "x coord in target frame", 0.0, -10.0, 10.0)
gen.add("track_frame_y", double_t,  SensorLevels.RECONFIGURE_RUNNING, "y coord in target frame", 0.0, -10.0, 10.0)
gen.add("track_frame_z", double_t,  SensorLevels.RECONFIGURE_RUNNING, "z coord in target frame", 0.0, -10.0, 10.0)




# First string value is node name, used only for generating documentation
# Second string value ("Rectify") is name of class and generated
#    .h file, with "Config" added, so class RectifyConfig
exit(gen.generate(PACKAGE, "vigir_wide_angle_image_proc", "Rectify"))

